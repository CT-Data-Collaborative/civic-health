var app=angular.module("app",["ngAnimate","ui.bootstrap","ngLodash","ngRoute"]);angular.module("app").config(["$routeProvider","$locationProvider",function(t,e){t.when("/data",{templateUrl:"static/dist/templates/data.html",controller:"DataVizController"}).when("/about",{templateUrl:"static/dist/templates/about.html"}).otherwise({redirectTo:"/data"})}]),angular.module("app").filter("suppressions",function(){return function(t){return"-9999"===t?"NA":"-666666"===t?" &mdash; ":t}}).filter("safe",["$sce",function(t){return t.trustAsHtml}]),angular.module("app").controller("DataVizController",["$scope","$http","$log","sidebarDisplay","categories","lodash",function(t,e,o,n,a,r){t.toggle=n.toggle;var l=a.getCategories("all");l.then(function(e){t.categories=a.list},function(t){alert("promise rejected!")}),t.$watchCollection(function(){return t.categories},function(){console.log("Selection Detected")},!0)}]),angular.module("app").directive("simpletable",function(){var t=tableChart();return{restrict:"E",scope:{data:"=data"},link:function(e,o,n){e.$watchCollection("data",function(e){d3.select(o[0]).datum(e).call(t)})}}}),angular.module("app").service("categories",["$http","$q","lodash",function(t,e,o){var n={};return n.list=[],n.toggle=function(t){position=o.findIndex(n.list,function(e){return e.name==t.name}),n.list[position].selected=!n.list[position].selected},n.getCategories=function(){return e(n.list.length>0?function(t){t(n)}:function(e,a){t.get("/static/dist/data/data.json").success(function(t){n.list=o.map(o.sortBy(t,"rank"),function(t){return o.extend({},t,{selected:!0})}),n.list,e(n)}).error(function(){a("There was an error getting categories")})})},n}]),angular.module("app").controller("SidebarController",["$scope","$log","lodash","categories",function(t,e,o,n){t.status={isopen:!1};var a=n.getCategories();a.then(function(e){t.categories=n.list},function(t){alert("promise rejected!")}),t.updateSelected=function(t){n.toggle(t),console.log(o.pluck(n.list,"selected"))},t.checkSelected=function(t){return t?"selected":"deselected"}}]),angular.module("app").service("sidebarDisplay",function(){return{toggle:{toggled:!1}}}),angular.module("app").controller("WrapController",["$scope","sidebarDisplay",function(t,e){t.toggle=e.toggle}]);
//# sourceMappingURL=data:application/json;base64,
